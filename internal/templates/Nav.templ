package templates

import "sjb_site/internal/middleware"
import "fmt"

type dropDownItem struct{
    name string
    link string
}

var verenigingDrop = []dropDownItem{
    { name: "Structuur", link: "/webalmanak/jaarclubs" },
    { name: "Pand", link: "/webalmanak/gilde" },
    { name: "Geschiedenis", link: "/webalmanak/leden" },
}

var webalmanakDrop = []dropDownItem{
    { name: "Leden", link: "/webalmanak/leden" },
    { name: "Jaarclubs", link: "/webalmanak/jaarclubs" },
    { name: "Gilden", link: "/webalmanak/gilde" },
    { name: "Commissies", link: "/webalmanak/commissies" },
    { name: "Besturen", link: "/webalmanak/bestuur" },
    { name: "Werkgroepen", link: "/webalmanak/werkgroep" },
    { name: "Huizen", link: "/webalmanak/huis" },
}

var extraDrop = []dropDownItem{
    { name: "Help", link: "/webalmanak/leden" },
    { name: "Downloads", link: "/webalmanak/jaarclubs" },
    { name: "Bromtol", link: "/webalmanak/gilde" },
    { name: "Afschrijfmap", link: "/webalmanak/commissie" },
    { name: "Beer en pas", link: "/webalmanak/bestuur" },
    { name: "Webshop", link: "/webalmanak/werkgroep" },
}


templ nav() {
    {{ user := middleware.GetUser(ctx) }}
	<nav class="px-4 lg:pb-2 border-t-4 border-red-600 mt-4 flex justify-between lg:justify-center">
		<div class="flex justify-between lg:py-4 w-full max-w-6xl">
            <a class="static lg:ml-5 z-100" href="/">
                <img class="transition-transform duration-300 transform hover:scale-120 hover:translate-y-2 h-26 absolute top-2 hidden lg:block" src="/static/img/logo.png" alt="logo"/>
                <img class="h-18 absolute top-2 lg:hidden" src="/static/img/logo-small.png" alt="logo"/>
                <div class="ml-14 lg:ml-22 px-2 font-serif text-xl lg:text-3xl font-weight-medium">D.S.V. Sint Jansbrug</div>
            </a>
			<ol class="hidden lg:flex space-x-4 items-center">
                @dropDown("Vereniging", "/", &verenigingDrop)
				<li class="relative">
					<a class="flex items-center gap-2 px-2 link" href="/eettafel">
                        <div class="-ml-1">Eettafel</div>
                    </a>
				</li>
				if user != nil {
                    @dropDown("Webalmanak", "/webalmanak/leden", &webalmanakDrop)
                } else {
                    <li class="relative">
                        <a class="group flex items-center gap-2 pl-5 pr-3 py-1 transition-color duration-150 ease-in-out rounded-full bg-red-500 border-1 border-transparent hover:border-red-500 text-white hover:bg-white hover:text-red-600 hover:underline" href="/eettafel">
                            <div class="-ml-1">Lid worden</div>
                            <span class="-rotate-45 group-hover:rotate-0 size-6 transition-transform duration-150 ease-in-out icon-[line-md--arrow-right]"></span>
                        </a>
                    </li>
                }
				<li class="relative">
					<a class="flex gap-2 px-2 items-center link" href="/eettafel">
                        <div class="-ml-1">Contact</div>
                    </a>
				</li>
                @dropDown("Extra", "/", &extraDrop)
			</ol>
			<ol class="hidden lg:flex space-x-4">
				if user != nil {
                    <li class="relative group">
                        <span class="opacity-0 group-hover:opacity-100 transition-opacity duration-100 delay-300 ease-in absolute pointer-events-none -top-5 -left-3">Account</span>
                        <a class="flex text-red-600 items-center hover:bg-stone-200 rounded-full" href={ templ.URL(fmt.Sprintf("/webalmanak/leden/%d", user.ID)) }><span class="icon-[material-symbols-light--account-circle]"></span></a>
                    </li>
                    if middleware.IsAdmin(ctx) {
                        <li class="relative group">
                            <span class="opacity-0 group-hover:opacity-100 transition-opacity duration-100 delay-300 ease-in absolute pointer-events-none -top-5 -left-7">Instellingen</span>
                            <a class="flex text-red-600 items-center hover:bg-stone-200 rounded-full" href="/admin"><span class="icon-[material-symbols-light--settings-outline-rounded]"></span></a>
                        </li>
                    }
                    <li class="relative group">
                        <span class="opacity-0 group-hover:opacity-100 transition-opacity duration-100 delay-300 ease-in absolute pointer-events-none -top-5 -left-3">Uitloggen</span>
                        <button class="cursor-pointer flex text-red-600 items-center hover:bg-stone-200 rounded-full" hx-target="body" hx-swap="innerHTML" hx-post="/logout"><span class="icon-[material-symbols-light--logout-rounded]"></span></button>
                    </li>
				} else {
					<li class="relative group">
                        <span class="opacity-0 group-hover:opacity-100 transition-opacity duration-100 delay-300 ease-in absolute pointer-events-none -top-5 -left-3">Inloggen</span>
						<a class="flex text-red-600 items-center hover:bg-stone-200 rounded-full" href="/login"><span class="icon-[material-symbols-light--login-rounded]"></span></a>
					</li>
				}
			</ol>
            <button class="lg:hidden text-red-600" onclick="toggleMenu()">
                <span class="icon-[material-symbols-light--menu]"></span>
            </button>
		</div>
	</nav>
    @mobile()
    <script>
        function toggleMenu() {
            let el = document.getElementById('mobileList')
            let mobile = document.getElementById('mobile')

            if (mobile.classList.contains('hidden')) {
                mobile.classList.remove('hidden');
                el.classList.add('right-0');
                requestAnimationFrame(() => {
                    el.classList.remove('-right-60');
                });
            }else {
                el.classList.add('-right-60');
                el.classList.remove('right-0');
                mobile.classList.add('hidden');
            }
        }
    </script>
}

templ dropDown(title string, link string, items *[]dropDownItem) {
    <li x-data="{
        open: false,
        toggle() {
            if (this.open) {
                return this.close()
            }
            this.$refs.button.focus()
            this.open = true
        },
        close() {
            if (! this.open) return
            this.open = false
        }
        }"
        x-on:keydown.escape.prevent.stop="close()"
        x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
        x-id="['dropdown-button']"
        @mouseleave="close()"
        class="relative"
        >
        <a
            href={ templ.URL(link) }    
            x-ref="button"
            x-on:click="toggle()"
            @mouseover="open = true"
            :aria-expanded="open"
            :aria-controls="$id('dropdown-button')"
            type="button"
            class="flex items-center gap-2 px-2 link"
            >
            { title }<span class="-ml-4 icon-[material-symbols-light--arrow-drop-down-rounded]"></span>
        </a>
        <ol x-ref="panel"
            x-show="open"
            x-transition.origin.top.left
            x-on:click.outside="close()"
            :id="$id('dropdown-button')"
            @mouseleave="close()"
            style="display: none;"
            class="absolute left-0 w-40 rounded-md bg-white shadow-md"
        >
            for _, item := range *items {
                <li class="">
                    <a href={ templ.URL(item.link) } class="flex items-center gap-2 w-full first-of-type:rounded-t-md last-of-type:rounded-b-md px-4 py-2.5 text-left text-sm hover:bg-gray-50 disabled:text-gray-500" >
                        <div class="">{ item.name }</div>
                    </a>
                </li>
            }
        </ol>
    </li>

}

templ mobile(){
    <div class="w-screen static shadow-xl">
        <button id="mobile" onclick="toggleMenu()" class="absolute hidden lg:hidden bg-stone-400/50 w-screen h-screen z-50"></button>
        <div class="absolute w-screen overflow-x-clip z-50">
            <div id="mobileList" class="w-60 h-screen absolute top-0 pr-12 bg-white -right-60 transition-all ease-in-out duration-100">
                <ol class="flex flex-col w-full h-screen ml-2 pl-6 py-4 border-l-2 border-red-400">
                    @mobileDropDown("Vereniging", "/", &verenigingDrop)
                    @mobileDropDown("Webalmanak", "/webalmanak/leden", &webalmanakDrop)
                    @mobileDropDown("Extra", "/extra", &extraDrop)
                </ol>
            </div>
        </div>
    </div>
}

templ mobileDropDown(title string, link string, items *[]dropDownItem) {
    <li class="mb-4 group">
        {{ script := templ.JSUnsafeFuncCall(fmt.Sprintf("document.getElementById('dropDown_%s').classList.toggle('hidden'); document.getElementById('dropIcon_%s').classList.toggle('-rotate-90')", title, title)) }}
        <button class="hover:underline flex items-center" onclick={script}>
            <span id={"dropIcon_"+title} class="-ml-4 transition-transform duration-250 ease-in-out -rotate-90 icon-[material-symbols-light--arrow-drop-down-rounded]"></span>
            <span class="-ml-1">{title}</span>
        </button>
        <ol id={"dropDown_"+title} class="ml-8 hidden mt-2 space-y-2">
        for _, item := range *items {
            <li class="">
                <a class="hover:underline" href={templ.URL(item.link)}>
                    <div class="-ml-1">{item.name}</div>
                </a>
            </li>
        }
        </ol>
    </li>
}
