package templates

import (
    "sjb_site/internal/store"
	"sjb_site/internal/middleware"
	"fmt"
)

templ Post(post *store.Post){
    <div class="flex justify-between">
        <div>
            <a class="underline" href={ templ.URL(fmt.Sprintf("/webalmanak/leden/%d", post.Author.ID)) }>{ post.Author.FirstName } { post.Author.LastName }</a>
            <p class="text-neutral-600">{ post.Date.Format("02-01-2006") }</p>
        </div>
        <div class="flex">
            if middleware.IsAdmin(ctx){
                if post.Published{
                    <div><span class="icon-[material-symbols-light--lock-open-right-outline]"></span></div>
                } else {
                    <div><span class="icon-[material-symbols-light--lock-outline]"></span></div>
                }
                if post.External{
                    <div><span class="icon-[tabler--world]"></span></div>
                } else {
                    <div><span class="icon-[tabler--world-off]"></span></div>
                }
                <a class="link" href={templ.SafeURL(fmt.Sprintf("/admin/post/%d", post.ID))}><span class="icon-[material-symbols-light--edit-square-outline-rounded]"></span></a>
            }
        </div>
    </div>
    <link href="/static/css/quill.snow.css" rel="stylesheet" />
    <div id="editor" class="mt-5 md:mx-10">
        {{ content := templ.Raw(post.Content) }}
        @content
    </div>
    <script src="/static/script/quill.js"></script>
    <script type="module">
        const quill = new Quill('#editor', {
            modules: {
                toolbar: false
              },
            theme: 'snow'
        });
        quill.disable()
    </script>

    if middleware.GetUser(ctx) != nil{
        <hr class="my-5">

        <h2 class="text-secondary-600">Laat een comment achter</h2>
        <form hx-post={ fmt.Sprintf("/comments/%d", post.ID) } 
            hx-swap="innerHTML"
            hx-target="#comments"
            hx-target-400="#commentError">
            <textarea id="content" class="" name="content" placeholder="Schrijf hier je comment"></textarea>
            <button class="text-secondary-600 cursor-pointer" @click="$el.replaceWith($el.cloneNode(true))" type="submit"><span class="icon-[material-symbols-light--send-outline-rounded]"></span></button>
        </form>
        <div id="commentError"> </div>

        <h2 class="text-secondary-600">Comments</h2>
        <div id="comments" 
            hx-get={ fmt.Sprintf("/comments/%d", post.ID) } 
            hx-trigger="load"
            hx-swap="innerHTML">

            <span class="icon-[line-md--loading-loop]"></span>
        </div>
    }
}

templ Comments(comments []*store.Comment){
    for _, comment := range comments {
        <div class="flex flex-row flex-wrap mt-5">
            <div class="flex flex-row">
                <a href={ templ.SafeURL(fmt.Sprintf("/webalmanak/leden/%d", comment.Author.ID)) }> 
                    <image class="rounded-full w-20" src={ comment.Author.Image } alt={ fmt.Sprintf("Foto van %s", comment.Author.Username) }/> 
                </a>
                <div class="ml-2"> 
                    <a class="underline" href={ templ.SafeURL(fmt.Sprintf("/webalmanak/leden/%d", comment.Author.ID)) }>{ fmt.Sprintf("%s %s", comment.Author.FirstName, comment.Author.LastName) }</a>
                    <p class="text-neutral-600">{ comment.Date.Format("02-01-2006 15:04") }</p>
                    if comment.Author.ID == middleware.GetUser(ctx).ID || middleware.IsAdmin(ctx){
                        <div class="text-secondary-600 cursor-pointer"
                            hx-delete={ fmt.Sprintf("/comments/%d/%d", comment.PostID, comment.ID) }
                            hx-swap="innerHTML"
                            hx-target="#comments"
                            hx-confirm="Ben je zeker dat je deze comment wil verwijderen?">
                            Delete
                        </div>
                    }
                </div>
            </div>
            <p class="ml-10">{ comment.Content }</p>
        </div>
    }
}

templ CommentError(err string){
    <div class="text-red-600">{ err }</div>
}
